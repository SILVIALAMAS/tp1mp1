class Program
    {
        private static Random random = new Random();
        
        // Método que llena la colección con números aleatorios
        public static void Llenar(Coleccionable<IComparable<Numero>> c)
        {
            for (int i = 0; i < 20; i++)
            {
                int n = random.Next(1, 100);
                c.agregar(new Numero(n));
            }
        }

        // Método que llena la colección con alumnos aleatorios
        public static void llenaAlumnos(Coleccionable<IComparable<Persona>> coleccionable)
        {
            for (int i = 0; i < 20; i++) // Usamos 20 alumnos
            {
                string nombre = "Alumno_" + random.Next(1, 100).ToString();
                string dni = random.Next(100, 999).ToString();
                int legajo = random.Next(1000, 9999);
                double promedio = Math.Round(random.NextDouble() * 5, 2);
                IComparable<Persona> alumno = new Alumno(nombre, dni, legajo, promedio);
                coleccionable.agregar(alumno);
                Console.WriteLine(alumno.ToString());
            }
        }
        // Método que informa sobre la colección de números
        public static void informar(Coleccionable<IComparable<Numero>> e)
        {
            Console.WriteLine("Cantidad de elementos: " + e.cuantos());
            IComparable<Numero> minimo = e.minimo();
            Console.WriteLine("Elemento minimo: " + ((Numero)minimo).getValor());

            IComparable<Numero> maximo = e.maximo();
            Console.WriteLine("Elemento maximo: " + ((Numero)maximo).getValor());

            Console.WriteLine("Introduce un valor para buscar en la colección: ");
            int valorLeido = int.Parse(Console.ReadLine());

            IComparable<Numero> v = new Numero(valorLeido);
            if (e.contiene(v))
            {
                Console.WriteLine("El elemento leído está en la colección.");
            }
            else
            {
                Console.WriteLine("El elemento leído NO está en la colección.");
            }
        }
       
        
       // Método que informa sobre la colección de personas
         public static void Informar(Coleccionable<IComparable<Persona>> e)
        {
         	Console.WriteLine("Cantidad: "+e.cuantos());
         	Console.WriteLine("Minimo: "+e.minimo().ToString());
         	Console.WriteLine("Maximo: "+e.maximo().ToString());
        }
  


        // Método principal
        static void Main(string[] args)
        {  //creamos instancias de pila y cola
            Pila pila = new Pila();
            Cola cola = new Cola();
           //creamos una instancia de coleccionMultiple con la pila y la cola
            ColeccionMultiple multiple= new ColeccionMultiple(pila,cola);
            
            // Llenamos la pila y la cola con alumnos con 20 elementos aleatorios
            llenaAlumnos(pila);
            llenaAlumnos(cola);
            
            //informamos sobre cada coleccion 
            Console.WriteLine("informacion de la coleccion pila: ");
            Informar(pila);
            
            Console.WriteLine("informacion de la coleccion cola: ");
            Informar(cola);
            
            Console.WriteLine("informacion de la coleccion multiple: ");
            Informar(multiple);

            Console.WriteLine("\nPresiona cualquier tecla para salir...");
            Console.ReadLine();
        }
    }
}
