// Interfaz Coleccionable para colecciones de objetos que implementen IComparable
    public interface Coleccionable<T>
    {
        int cuantos();
        T minimo();
        T maximo();
        void agregar(T c);
        bool contiene(T c);
    }

    // Clase Pila que implementa Coleccionable para objetos de tipo IComparable<Persona>
    public class Pila : Coleccionable<IComparable<Persona>>
    {
        private List<IComparable<Persona>> elementos = new List<IComparable<Persona>>();

        public void agregar(IComparable<Persona> c)
        {
            this.elementos.Add(c);
        }

        public IComparable<Persona> desapilar()
        {
            IComparable<Persona> aux = this.elementos[this.elementos.Count - 1];
            this.elementos.RemoveAt(this.elementos.Count - 1);
            return aux;
        }

        public int cuantos()
        {
            return this.elementos.Count;
        }

        public IComparable<Persona> minimo()
        {
            IComparable<Persona> min = this.elementos[0];
            for (int i = 1; i < this.cuantos(); i++)
            {
                if (this.elementos[i].sosMenor((Persona)min))
                {
                    min = this.elementos[i];
                }
            }
            return min;
        }

        public IComparable<Persona> maximo()
        {
            IComparable<Persona> max = this.elementos[0];
            for (int i = 1; i < this.cuantos(); i++)
            {
                if (this.elementos[i].sosMayor((Persona)max))
                {
                    max = this.elementos[i];
                }
            }
            return max;
        }

        public bool contiene(IComparable<Persona> c)
        {
            foreach (IComparable<Persona> elem in elementos)
            {
                if (elem.sosIgual((Persona)c))
                {
                    return true;
                }
            }
            return false;
        }
    }

